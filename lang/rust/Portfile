# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0

name                rust
version             1.50.0
revision            3
categories          lang devel
platforms           darwin
supported_archs     x86_64 arm64
license             {MIT Apache-2} BSD zlib NCSA Permissive
maintainers         {g5pw @g5pw} \
                    {gmail.com:herby.gillot @herbygillot} \
                    openmaintainer

description         A safe, concurrent, practical language

long_description    Rust is a curly-brace, block-structured expression \
                    language. It visually resembles the C language \
                    family, but differs significantly in syntactic and \
                    semantic details. Its design is oriented toward \
                    concerns of \"programming in the large\", that is, of \
                    creating and maintaining boundaries -- both abstract \
                    and operational -- that preserve large-system \
                    integrity, availability and concurrency.

homepage            https://www.rust-lang.org

# Get from src/stage0.txt
# Rust stable 1.x usually requires `set rustc_version 1.(x-1)`
set rustc_version    1.49.0

# can use cmake or cmake-devel; default to cmake.
depends_build       bin:git:git \
                    path:bin/cmake:cmake \
                    port:python39 \
                    port:openssl \
                    port:pkgconfig \
                    port:ninja \
                    port:gmake

depends_lib         port:libffi \
                    path:lib/libssl.dylib:openssl


set arch ${configure.build_arch}
if {${configure.build_arch} eq "arm64"} {
    set arch "aarch64"
}


master_sites        https://static.rust-lang.org/dist

distname            ${name}c-${version}-src

distfiles-append    rust-std-${rustc_version}-${arch}-apple-${os.platform}${extract.suffix} \
                    rustc-${rustc_version}-${arch}-apple-${os.platform}${extract.suffix} \
                    cargo-${rustc_version}-${arch}-apple-${os.platform}${extract.suffix}

checksums           ${distname}${extract.suffix} \
                    rmd160  07633389398c9e746a6d349e97775201aaeeeb3b \
                    sha256  95978f8d02bb6175ae3238930baf03563c240aedf9a70bebdc3eaa2a8c3c5a5e \
                    size    159542148

checksums-append    rust-std-${rustc_version}-x86_64-apple-${os.platform}${extract.suffix} \
                    rmd160  b43ecabbcfa19327be5dccf09fc72855d0707a49 \
                    sha256  c4389a8534b8da3ae3570646d68fea9a25268b17ed138867e31d4517312759af \
                    size    35384330 \
                    rustc-${rustc_version}-x86_64-apple-${os.platform}${extract.suffix} \
                    rmd160  ebe1ff219b1bd8d12a610a3cf228a5eae3de9de6 \
                    sha256  09333f9aacb9c5959e2a2798d7e283cae674255f063a35ea28f91595caa0a78b \
                    size    79819120 \
                    cargo-${rustc_version}-x86_64-apple-${os.platform}${extract.suffix} \
                    rmd160  83a5c42490e8579d8767dc8c5c4c5e3d13da0bba \
                    sha256  ab1bcd7840c715832dbe4a2c5cd64882908cc0d0e6686dd6aec43d2e4332a003 \
                    size    5945516 \
                    rust-std-${rustc_version}-aarch64-apple-${os.platform}${extract.suffix} \
                    rmd160  1ddc99fbc545b2e601d507d90b5f88bd8cdb1a32 \
                    sha256  cf3308806fc3b6fe00ce49f1e63b1cb1d1443cc812eff7947257f31f590465d3 \
                    size    27145897 \
                    rustc-${rustc_version}-aarch64-apple-${os.platform}${extract.suffix} \
                    rmd160  2307caf7575c72bf3988698c49cce824dcf71160 \
                    sha256  3e8c0c9101f27623f7607f2d8acef5f28dcb2bdfcded56f210d9d370cf9a9c06 \
                    size    70161621 \
                    cargo-${rustc_version}-aarch64-apple-${os.platform}${extract.suffix} \
                    rmd160  cf2de4de6008e9e176d75f7da7c0809dca9d15eb \
                    sha256  2bd6eb276193b70b871c594ed74641235c8c4dcd77e9b8f193801c281b55478d \
                    size    5388171

if {${os.platform} eq "darwin" && ${os.major} < 11} {
    known_fail yes
    pre-fetch {
        ui_error "${name} is only supported on OS X 10.7 Lion or later."
        return -code error "unsupported platform version"
    }
}

set rust_platform       ${arch}-apple-${os.platform}
set rust_root           ${worksrcpath}/build/stage0-${arch}

post-extract {
    file mkdir ${rust_root}
    system "cp -r ${workpath}/rust-std-${rustc_version}-${rust_platform}/rust-std-${rust_platform}/* ${rust_root}"
    system "cp -r ${workpath}/rustc-${rustc_version}-${rust_platform}/rustc/* ${rust_root}"
    system "cp -r ${workpath}/cargo-${rustc_version}-${rust_platform}/cargo/* ${rust_root}"
}

configure.args          --enable-vendor \
                        --default-linker=${configure.cc} \
                        --disable-codegen-tests \
                        --disable-docs \
                        --release-channel=stable \
                        --build=${rust_platform} \
                        --local-rust-root=${rust_root} \
                        --set=target.${rust_platform}.cc=${configure.cc} \
                        --set=target.${rust_platform}.cxx=${configure.cxx} \
                        --set=target.${rust_platform}.linker=${configure.cc} \
                        --enable-extended \
                        --tools=rustfmt,clippy,rls

post-configure {
    # the bootstrap call to rustc uses cc for the linker
    # place config file in the HOME directory
    # see https://trac.macports.org/wiki/UsingTheRightCompiler
    xinstall -d -m 0755 ${workpath}/.home/.cargo
    set config [open ${workpath}/.home/.cargo/config w]

    puts ${config} "\[target.${rust_platform}\]"
    puts ${config} "linker = \"${configure.cc}\""

    close ${config}
}

build.args          VERBOSE=1 BOOTSTRAP_ARGS="-v -j${build.jobs}"
build.env-append    OPENSSL_DIR=${prefix}

test.run            yes
test.target         check
test.args           VERBOSE=1

destroot.args       VERBOSE=1

if {${subport} eq ${name}} {

    post-destroot {
        delete ${destroot}${prefix}/lib/rustlib/install.log
        delete ${destroot}${prefix}/lib/rustlib/uninstall.sh
        xinstall -d ${destroot}${prefix}/share/${name}
        xinstall -m 644 ${worksrcpath}/src/etc/ctags.rust \
            ${destroot}${prefix}/share/${name}
    }

}

livecheck.type      regex
livecheck.url       https://github.com/rust-lang/rust/tags
livecheck.regex     archive/(\[\\d\\.\]+).zip

subport rust-src {
    # remove dependencies
    depends_build
    depends_lib

    set rust_source_dir ${destroot}${prefix}/lib/rustlib/src/rust

    description     Source code for the rust programming language
    long_description ${description}

    use_configure no

    build {}

    destroot {
        xinstall -d ${rust_source_dir}
        move ${worksrcpath}/src ${rust_source_dir}/src

        # correct the permissions
        system -W ${rust_source_dir} "find . -type d -exec chmod 755 {} \\;"
        system -W ${rust_source_dir} "find . -type f -exec chmod 644 {} \\;"

        # delete the test directories (which for some god awful reason contains binaries)
        system -W ${rust_source_dir} "find . -type d -name test -print0 | xargs -0 rm -rf"
    }
}
