Rename log variable to avoid conflict with log function in <math.h>.
--- src/shared/common/Logging.cpp.orig	2006-11-24 17:14:42.000000000 +0000
+++ src/shared/common/Logging.cpp	2021-03-10 00:03:58.000000000 +0000
@@ -10,30 +10,30 @@
 
 static const char *toTrace[] = {"BaseEditorNative", "JavaLineSource" };
 
-static FILE *log = 0;
+static FILE *logfh = 0;
 
 static void file_logger(int level, const char *cname, const char *msg, va_list v){
 
   int idx = 0;
 
-  while (log == 0 && idx < 10){
+  while (logfh == 0 && idx < 10){
     char log_name[30];
 #ifdef __unix__
     sprintf(log_name, "/tmp/clr-trace%d.log", idx);
 #else
     sprintf(log_name, "c:\\clr-trace%d.log", idx);
 #endif
-    log = fopen(log_name, "ab+");
+    logfh = fopen(log_name, "ab+");
     idx++;
   }
 
-  fprintf(log, "[%s][%s] ", levelNames[level], cname);
+  fprintf(logfh, "[%s][%s] ", levelNames[level], cname);
 
-  vfprintf(log, msg, v);
+  vfprintf(logfh, msg, v);
 
-  fprintf(log, "\n");
+  fprintf(logfh, "\n");
 
-  fflush(log);
+  fflush(logfh);
 }
 
 static void console_logger(int level, const char *cname, const char *msg, va_list v){
@@ -48,10 +48,10 @@
 
 void colorer_logger_set_target(const char *logfile){
   if (logfile == 0) return;
-  if (log != 0){
-    fclose(log);
+  if (logfh != 0){
+    fclose(logfh);
   }
-  log = fopen(logfile, "ab+");
+  logfh = fopen(logfile, "ab+");
 }
 
 
